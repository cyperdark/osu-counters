@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap");


:root {
  --font-size: 40px;

  --offset: 0%;
}

* {
  position: relative;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  line-height: 1em;
}

.test {
  width: 100vw;
  color: white;
  /* background-color: black; */
  overflow-wrap: break-word;
}

body {
  font-family: "Roboto", sans-serif;
  color: white;
  font-size: var(--font-size);
  /* background-color: black; */
  width: 100vw;
  height: 100vh;
  overflow: hidden;

}

body.-top::after,
body.-left::after {
  top: 0;
  left: 0;
}

body.-right::after {
  top: 0;
  right: 0;
}

body.-bottom::after {
  left: 0;
  bottom: 0;
}

body::after {
  display: none;
  content: '';
  position: fixed;

  width: 1em;
  height: 1em;

  border-radius: 0.1em;
  background: white;

  animation: fade 1s 3s forwards;

}

@keyframes fade {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

.main {
  flex-direction: column;
  position: absolute;
  display: flex;

  /* &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 10px;
    height: 10px;
    background: wheat;
    z-index: 2;
  }

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 10px;
    height: 10px;
    background: wheat;
    z-index: 2;
  } */
}

.keys {
  --color: red;
  --key-color: green;
  --press: white;
  --pressed: yellow;

  position: relative;
  justify-content: center;
  align-items: center;
  display: flex;
  color: var(--color);

  transition: margin 0.4s ease, height 0.4s ease, opacity 0.4s ease;
}

.keys .bpm {
  white-space: nowrap;

  text-shadow: 0 0 0.2em black, 0 0 0.5em black, 0 0 0.8em black;

  justify-content: center;
  align-items: center;
  position: absolute;
  font-size: 0.8em;
  display: flex;
}

.keys .bpmcount {
  text-align: right;
}

.keys .bpmtext {
  font-size: .7em;
  top: 0.12em;
  position: relative;
}


.keys .wrapper {
  position: absolute;
  z-index: 1;
}


.keys .press {
  position: absolute;
  width: 1em;
  height: var(--height);
  top: 50%;
  left: 50%;
  margin: auto 0;
  background: var(--press);
  border-radius: 0.1em;
  transition: background 0.05s ease, transform 0.1s ease;
  transform: translate(-50%, -50%);
  /* transition: background 0.05s ease, transform 0.05s ease; */

  z-index: 0;
}

.keys .press.active {
  background: var(--pressed);
  transform: translate(-50%, -50%) scale(1, 0.6);
}

.keys .keyname {
  text-align: center;
  font-size: 0.8em;
  text-shadow: 0 0 0.1em rgba(0, 0, 0, 0.5), 0 0 0.2em rgba(0, 0, 0, 0.5), 0 0 0.4em rgba(0, 0, 0, 0.5);
  position: absolute;
  color: var(--key-color);
  width: 2em;

  /* -webkit-text-stroke: 5px black;
  paint-order: stroke fill; */

  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


.keys .count {
  /* filter: drop-shadow(0 0 0.2em black) drop-shadow(0 0 0.5em black) drop-shadow(0 0 0.8em black); */
  text-shadow: 0 0 0.2em black, 0 0 0.5em black, 0 0 0.8em black;
  white-space: nowrap;
  text-align: center;
  font-size: 0.7em;

  position: absolute;

  z-index: 1;
}


.keys canvas {
  mask-image: linear-gradient(-90deg, black, transparent);
  -webkit-mask-image: linear-gradient(-90deg, black, transparent);
  position: absolute;
  width: var(--width);
  z-index: 0;
}

.keys.hidden {
  height: 0 !important;
  opacity: 0 !important;
  margin: 0 0 !important;
}

#m1Name,
#m2Name {
  font-size: 0.6em;
}





body.-top .main {
  flex-direction: row;
  top: 0;
  left: var(--offset);
  margin: 0 1em;
  transform-origin: top left;
}

body.-top.--right .main {
  top: 0;
  left: unset;
  right: var(--offset);
}

body.-top .main .keys {
  height: calc(var(--width) + 10em);
  width: var(--height);
  margin: 0 0.6em;
}

body.-top .main .keys .bpm {
  top: 1em;
  flex-direction: column;
}

body.-top .main .keys .wrapper {
  top: 3.5em;
}

body.-top .main .keys .press {
  width: var(--height);
  height: 1em;
}

body.-top .main .keys .press.active {
  transform: translate(-50%, -50%) scale(0.6, 1);
}

body.-top .main .keys .count {
  font-size: 0.6em;
  top: 3em;
  left: 50%;
  transform: translate(-50%, -50%);
}

body.-top .main .keys canvas {
  top: 3.8em;
  transform: rotate(-90deg) translateX(calc(var(--width)* -0.5));
}





body.-left .main {
  top: var(--offset);
  left: 0;
  margin: 1em 0;
}

body.-left.--bottom .main {
  top: unset;
  left: 0;
  bottom: var(--offset);
}

body.-left .main .keys {
  margin: 0.7em 0;
}

body.-left .main .keys .bpm {
  justify-content: flex-end;
  width: 3.6em;
  left: 0.4em;
}

body.-left .main .keys .wrapper {
  left: 4.5em;
}

body.-left .main .keys .count {
  top: 50%;
  left: 2.2em;
  transform: translateY(-50%);
}

body.-left .main .keys canvas {
  left: 5.2em;
  transform: rotate(180deg);
}





body.-right .main {
  top: var(--offset);
  right: 0;
  margin: 1em 0;
}

body.-right.--bottom .main {
  top: unset;
  right: 0;
  bottom: var(--offset);
}

body.-right .main .keys {
  margin: 0.7em 0;
}

body.-right .main .keys .bpm {
  justify-content: flex-start;
  width: 3.6em;
  right: 0.6em;
}

body.-right .main .keys .wrapper {
  right: 4.5em;
}

body.-right .main .keys .count {
  top: 50%;
  right: 2.2em;
  transform: translateY(-50%);
}

body.-right .main .keys canvas {
  right: 5.2em;
}





body.-bottom .main {
  flex-direction: row;
  bottom: 0;
  left: var(--offset);
  margin: 0 1em;
  transform-origin: top left;
}

body.-bottom.--right .main {
  bottom: 0;
  left: unset;
  right: var(--offset);
}

body.-bottom .main .keys {
  width: var(--height);
  height: calc(var(--width) + 10em);
  margin: 0 0.6em;
}

body.-bottom .main .keys .bpm {
  bottom: 1em;
  flex-direction: column;
}

body.-bottom .main .keys .wrapper {
  bottom: 3.5em;
}

body.-bottom .main .keys .press {
  width: var(--height);
  height: 1em;
}

body.-bottom .main .keys .press.active {
  transform: translate(-50%, -50%) scale(0.6, 1);
}

body.-bottom .main .keys .count {
  font-size: 0.6em;
  bottom: 1.8em;
  left: 50%;
  transform: translate(-50%, -50%);
}

body.-bottom .main .keys canvas {
  bottom: 4.1em;
  transform: rotate(90deg) translateX(calc(var(--width)* -0.45));
}